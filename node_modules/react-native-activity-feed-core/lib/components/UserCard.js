Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'src/components/UserCard.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _Avatar = require('./Avatar');

var _Avatar2 = _interopRequireDefault(_Avatar);

var _FollowButton = require('./FollowButton');

var _FollowButton2 = _interopRequireDefault(_FollowButton);

var _styles = require('../styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var UserCard = function (_React$Component) {
  _inherits(UserCard, _React$Component);

  function UserCard() {
    _classCallCheck(this, UserCard);

    return _possibleConstructorReturn(this, (UserCard.__proto__ || Object.getPrototypeOf(UserCard)).apply(this, arguments));
  }

  _createClass(UserCard, [{
    key: 'render',
    value: function render() {
      var styles = (0, _styles.buildStylesheet)('userCard', this.props.styles);
      var user = this.props.user;

      return _react2.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        },
        _react2.default.createElement(_Avatar2.default, { source: user.profileImage, size: 42, noShadow: true, __source: {
            fileName: _jsxFileName,
            lineNumber: 22
          }
        }),
        _react2.default.createElement(
          _reactNative.Text,
          { style: styles.text, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          },
          user.name
        ),
        _react2.default.createElement(_FollowButton2.default, {
          __source: {
            fileName: _jsxFileName,
            lineNumber: 25
          }
        })
      );
    }
  }]);

  return UserCard;
}(_react2.default.Component);

UserCard.defaultProps = {};
exports.default = UserCard;