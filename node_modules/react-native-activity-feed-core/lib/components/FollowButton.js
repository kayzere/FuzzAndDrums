Object.defineProperty(exports, "__esModule", {
  value: true
});
var _jsxFileName = 'src/components/FollowButton.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactNative = require('react-native');

var _styles = require('../styles');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FollowButton = function (_React$Component) {
  _inherits(FollowButton, _React$Component);

  function FollowButton(props) {
    _classCallCheck(this, FollowButton);

    var _this = _possibleConstructorReturn(this, (FollowButton.__proto__ || Object.getPrototypeOf(FollowButton)).call(this, props));

    _this.state = { followed: _this.props.followed || false };
    return _this;
  }

  _createClass(FollowButton, [{
    key: 'render',
    value: function render() {
      var clicked = this.props.clicked;

      var styles = (0, _styles.buildStylesheet)('followButton', this.props.styles);

      return _react2.default.createElement(
        _reactNative.TouchableOpacity,
        { onClick: clicked, __source: {
            fileName: _jsxFileName,
            lineNumber: 38
          }
        },
        _react2.default.createElement(
          _reactNative.View,
          {
            colors: this.state.followed ? ['#ccc', '#ccc'] : ['#008DFF', '#0079FF'],
            style: styles.button,
            __source: {
              fileName: _jsxFileName,
              lineNumber: 39
            }
          },
          _react2.default.createElement(
            _reactNative.Text,
            { style: styles.buttonText, __source: {
                fileName: _jsxFileName,
                lineNumber: 45
              }
            },
            this.state.followed ? 'Following' : 'Follow'
          )
        )
      );
    }
  }]);

  return FollowButton;
}(_react2.default.Component);

FollowButton.defaultProps = {
  followed: false
};
exports.default = FollowButton;